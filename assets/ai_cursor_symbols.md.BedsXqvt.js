import{_ as s,c as e,o as n,ag as i}from"./chunks/framework.ZWmXjvV8.js";const u=JSON.parse('{"title":"Cursor @ 符号引用","description":"","frontmatter":{},"headers":[],"relativePath":"ai/cursor/symbols.md","filePath":"ai/cursor/symbols.md","lastUpdated":1741509637000}'),l={name:"ai/cursor/symbols.md"};function p(r,a,t,o,d,c){return n(),e("div",null,a[0]||(a[0]=[i(`<h1 id="cursor-符号引用" tabindex="-1">Cursor @ 符号引用 <a class="header-anchor" href="#cursor-符号引用" aria-label="Permalink to &quot;Cursor @ 符号引用&quot;">​</a></h1><blockquote><p><strong>免责声明</strong>：本文档是关于 Cursor @ 符号引用功能的<strong>第三方非官方中文文档</strong>，仅供学习参考。内容可能不完全反映最新的官方信息，请以 <a href="https://docs.cursor.com" target="_blank" rel="noopener noreferrer">Cursor 官方文档</a> 为准。所有商标和版权归 Cursor/Anysphere 公司所有。</p></blockquote><blockquote><p>本文档介绍如何在 Cursor 中使用 @ 符号引用功能，以便精确地指定上下文和参考信息。</p></blockquote><hr><h2 id="什么是-符号引用" tabindex="-1">什么是 @ 符号引用？ <a class="header-anchor" href="#什么是-符号引用" aria-label="Permalink to &quot;什么是 @ 符号引用？&quot;">​</a></h2><p>@ 符号引用是 Cursor 中的一个强大功能，允许您在与 AI 交互时精确地指定上下文和参考信息。通过在文本中使用 @ 符号，您可以引用特定的文件、文件夹、函数、类或其他代码元素，帮助 AI 更准确地理解您的问题和意图。</p><p>这种引用机制极大地提高了 AI 回答的相关性和准确性，因为它确保 AI 拥有解答问题所需的确切上下文。</p><h2 id="符号类型及用法" tabindex="-1">@ 符号类型及用法 <a class="header-anchor" href="#符号类型及用法" aria-label="Permalink to &quot;@ 符号类型及用法&quot;">​</a></h2><p>Cursor 支持多种类型的 @ 符号引用，每种类型适用于不同的场景：</p><h3 id="_1-文件引用" tabindex="-1">1. 文件引用 <a class="header-anchor" href="#_1-文件引用" aria-label="Permalink to &quot;1. 文件引用&quot;">​</a></h3><p>使用 <code>@filename</code> 引用特定文件：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/components/Button.jsx 这个组件的属性接口是什么？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>文件引用支持以下形式：</p><ul><li>完整路径：<code>@src/components/Button.jsx</code></li><li>部分路径：<code>@Button.jsx</code>（Cursor 将搜索匹配的文件）</li><li>带星号的模式：<code>@*.jsx</code>（引用特定类型的文件）</li></ul><h3 id="_2-文件夹引用" tabindex="-1">2. 文件夹引用 <a class="header-anchor" href="#_2-文件夹引用" aria-label="Permalink to &quot;2. 文件夹引用&quot;">​</a></h3><p>使用 <code>@folder/</code> 引用整个文件夹中的文件：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/utils/ 这个文件夹中有哪些辅助函数？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>文件夹引用对于了解项目结构或查询相关文件组非常有用。</p><h3 id="_3-符号引用" tabindex="-1">3. 符号引用 <a class="header-anchor" href="#_3-符号引用" aria-label="Permalink to &quot;3. 符号引用&quot;">​</a></h3><p>使用 <code>@symbolName</code> 引用特定的函数、类、变量或其他符号：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@UserAuthentication 这个类在系统中的责任是什么？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>符号引用需要代码库已被索引，以便 Cursor 能够找到这些符号。</p><h3 id="_4-代码库引用" tabindex="-1">4. 代码库引用 <a class="header-anchor" href="#_4-代码库引用" aria-label="Permalink to &quot;4. 代码库引用&quot;">​</a></h3><p>使用 <code>@codebase</code> 引用整个代码库：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@codebase 这个项目使用了哪些状态管理解决方案？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>代码库引用适用于广泛的问题，但可能会导致 AI 处理大量信息。</p><h3 id="_5-互联网引用" tabindex="-1">5. 互联网引用 <a class="header-anchor" href="#_5-互联网引用" aria-label="Permalink to &quot;5. 互联网引用&quot;">​</a></h3><p>使用 <code>@web</code> 引用互联网上的信息：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@web React 18中的并发特性如何工作？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>互联网引用允许 AI 访问网络上的信息，以回答您的问题。</p><h3 id="_6-文档引用" tabindex="-1">6. 文档引用 <a class="header-anchor" href="#_6-文档引用" aria-label="Permalink to &quot;6. 文档引用&quot;">​</a></h3><p>使用 <code>@docs</code> 引用项目文档：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@docs 如何配置这个项目的开发环境？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>文档引用适用于查询项目文档、README 文件和其他说明性文本。</p><h2 id="组合使用-符号" tabindex="-1">组合使用 @ 符号 <a class="header-anchor" href="#组合使用-符号" aria-label="Permalink to &quot;组合使用 @ 符号&quot;">​</a></h2><p>您可以在同一查询中组合使用多个 @ 符号引用：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/api/auth.js 和 @src/components/Login.jsx 这两个文件如何交互？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>组合引用特别适合于理解组件之间的关系或跨文件的功能。</p><h2 id="符号的高级用法" tabindex="-1">@ 符号的高级用法 <a class="header-anchor" href="#符号的高级用法" aria-label="Permalink to &quot;@ 符号的高级用法&quot;">​</a></h2><h3 id="_1-引用部分文件内容" tabindex="-1">1. 引用部分文件内容 <a class="header-anchor" href="#_1-引用部分文件内容" aria-label="Permalink to &quot;1. 引用部分文件内容&quot;">​</a></h3><p>在某些情况下，您可以引用文件的特定部分：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/utils/helpers.js:10-20 这段代码的目的是什么？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这将引用指定文件的特定行范围。</p><h3 id="_2-上下文限制" tabindex="-1">2. 上下文限制 <a class="header-anchor" href="#_2-上下文限制" aria-label="Permalink to &quot;2. 上下文限制&quot;">​</a></h3><p>当处理大型代码库时，您可以限制 AI 关注的上下文：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>仅参考 @src/components/，我应该如何实现一个新的表单组件？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样可以指导 AI 只关注特定部分的代码库。</p><h3 id="_3-上下文排除" tabindex="-1">3. 上下文排除 <a class="header-anchor" href="#_3-上下文排除" aria-label="Permalink to &quot;3. 上下文排除&quot;">​</a></h3><p>您也可以明确排除某些上下文：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>不要考虑 @tests/，给我说明这个应用的主要功能模块</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这有助于让 AI 专注于实际代码而非测试代码。</p><h2 id="符号引用的最佳实践" tabindex="-1">@ 符号引用的最佳实践 <a class="header-anchor" href="#符号引用的最佳实践" aria-label="Permalink to &quot;@ 符号引用的最佳实践&quot;">​</a></h2><p>为了获得最佳结果，请考虑以下使用 @ 符号的最佳实践：</p><h3 id="_1-精确指定上下文" tabindex="-1">1. 精确指定上下文 <a class="header-anchor" href="#_1-精确指定上下文" aria-label="Permalink to &quot;1. 精确指定上下文&quot;">​</a></h3><p>使用尽可能精确的引用指向相关文件或符号：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 不太精确：</span></span>
<span class="line"><span>@src 这个项目如何处理用户认证？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 更加精确：</span></span>
<span class="line"><span>@src/auth/ 和 @src/components/Login/ 这个项目如何处理用户认证？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-过滤不相关信息" tabindex="-1">2. 过滤不相关信息 <a class="header-anchor" href="#_2-过滤不相关信息" aria-label="Permalink to &quot;2. 过滤不相关信息&quot;">​</a></h3><p>避免引用与问题无关的大量文件：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 可能导致信息过载：</span></span>
<span class="line"><span>@src 这个按钮组件如何工作？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 更加聚焦：</span></span>
<span class="line"><span>@src/components/Button.jsx 这个按钮组件如何工作？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-提供足够的上下文" tabindex="-1">3. 提供足够的上下文 <a class="header-anchor" href="#_3-提供足够的上下文" aria-label="Permalink to &quot;3. 提供足够的上下文&quot;">​</a></h3><p>确保引用足够的上下文让 AI 理解问题：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 上下文可能不足：</span></span>
<span class="line"><span>@utils/date.js 如何使用这个函数？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 更好的方式：</span></span>
<span class="line"><span>@utils/date.js 和 @components/Calendar.jsx 中如何使用日期格式化函数？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_4-利用自动补全" tabindex="-1">4. 利用自动补全 <a class="header-anchor" href="#_4-利用自动补全" aria-label="Permalink to &quot;4. 利用自动补全&quot;">​</a></h3><p>在输入 @ 符号后，Cursor 通常会提供文件和符号的自动补全建议。利用这些建议可以更快地找到所需的引用。</p><h2 id="符号引用的常见用例" tabindex="-1">@ 符号引用的常见用例 <a class="header-anchor" href="#符号引用的常见用例" aria-label="Permalink to &quot;@ 符号引用的常见用例&quot;">​</a></h2><h3 id="_1-代码理解" tabindex="-1">1. 代码理解 <a class="header-anchor" href="#_1-代码理解" aria-label="Permalink to &quot;1. 代码理解&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/components/DataTable.jsx 这个组件的渲染逻辑是什么？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-跨文件关系分析" tabindex="-1">2. 跨文件关系分析 <a class="header-anchor" href="#_2-跨文件关系分析" aria-label="Permalink to &quot;2. 跨文件关系分析&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@models/User.js 和 @controllers/UserController.js 之间的数据流是什么样的？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-api-使用查询" tabindex="-1">3. API 使用查询 <a class="header-anchor" href="#_3-api-使用查询" aria-label="Permalink to &quot;3. API 使用查询&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@api/auth.js 如何正确调用这个认证 API？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-代码库探索" tabindex="-1">4. 代码库探索 <a class="header-anchor" href="#_4-代码库探索" aria-label="Permalink to &quot;4. 代码库探索&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@codebase 这个项目的核心架构是什么样的？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_5-技术策略咨询" tabindex="-1">5. 技术策略咨询 <a class="header-anchor" href="#_5-技术策略咨询" aria-label="Permalink to &quot;5. 技术策略咨询&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@package.json 和 @web 考虑我们的依赖，应该使用哪个 React 表单库？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><p>如果 @ 符号引用不按预期工作，请考虑以下解决方案：</p><h3 id="_1-路径问题" tabindex="-1">1. 路径问题 <a class="header-anchor" href="#_1-路径问题" aria-label="Permalink to &quot;1. 路径问题&quot;">​</a></h3><p>确保文件路径相对于项目根目录是正确的。如果不确定，尝试使用文件名而非完整路径。</p><h3 id="_2-索引问题" tabindex="-1">2. 索引问题 <a class="header-anchor" href="#_2-索引问题" aria-label="Permalink to &quot;2. 索引问题&quot;">​</a></h3><p>确保您的代码库已被正确索引。检查代码库索引设置，并等待索引完成。</p><h3 id="_3-命名冲突" tabindex="-1">3. 命名冲突 <a class="header-anchor" href="#_3-命名冲突" aria-label="Permalink to &quot;3. 命名冲突&quot;">​</a></h3><p>如果有多个同名文件，尝试使用更完整的路径来区分它们。</p><h3 id="_4-大文件处理" tabindex="-1">4. 大文件处理 <a class="header-anchor" href="#_4-大文件处理" aria-label="Permalink to &quot;4. 大文件处理&quot;">​</a></h3><p>对于非常大的文件，考虑引用特定部分或关键函数，而非整个文件。</p><hr><p>@ 符号引用是 Cursor 中强大且灵活的功能，可以显著提高 AI 辅助的效率和准确性。通过精确指定上下文，您可以获得更加相关和有用的回答，使 AI 成为更有效的编程助手。</p><p>如有任何问题，请参考<a href="/ai/cursor/faq.html">常见问题解答</a>或访问<a href="https://forum.cursor.com" target="_blank" rel="noopener noreferrer">社区论坛</a>寻求帮助。</p>`,88)]))}const b=s(l,[["render",p]]);export{u as __pageData,b as default};
