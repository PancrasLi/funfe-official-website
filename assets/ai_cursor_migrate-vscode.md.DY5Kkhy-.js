import{_ as r,c as e,o as a,ag as l}from"./chunks/framework.ZWmXjvV8.js";const C=JSON.parse('{"title":"从 VS Code 迁移到 Cursor","description":"","frontmatter":{},"headers":[],"relativePath":"ai/cursor/migrate-vscode.md","filePath":"ai/cursor/migrate-vscode.md","lastUpdated":1741509637000}'),i={name:"ai/cursor/migrate-vscode.md"};function d(t,o,s,c,u,h){return a(),e("div",null,o[0]||(o[0]=[l('<h1 id="从-vs-code-迁移到-cursor" tabindex="-1">从 VS Code 迁移到 Cursor <a class="header-anchor" href="#从-vs-code-迁移到-cursor" aria-label="Permalink to &quot;从 VS Code 迁移到 Cursor&quot;">​</a></h1><blockquote><p><strong>免责声明</strong>：本文档是 <a href="https://docs.cursor.com/get-started/migrate-from-vs-code" target="_blank" rel="noopener noreferrer">Cursor 官方文档中&quot;从 VS Code 迁移&quot;部分</a>的<strong>第三方非官方中文翻译</strong>，仅供学习参考。内容可能不完全反映最新的官方信息，请以 <a href="https://docs.cursor.com" target="_blank" rel="noopener noreferrer">Cursor 官方文档</a> 为准。所有商标和版权归 Cursor/Anysphere 公司所有。</p></blockquote><blockquote><p>本文档旨在帮助习惯使用 VS Code 的开发者顺利过渡到 Cursor。</p></blockquote><hr><h2 id="cursor-与-vs-code-的关系" tabindex="-1">Cursor 与 VS Code 的关系 <a class="header-anchor" href="#cursor-与-vs-code-的关系" aria-label="Permalink to &quot;Cursor 与 VS Code 的关系&quot;">​</a></h2><p>Cursor 是 VS Code 的一个分支（fork）。这使我们能够专注于打造集成 AI 的最佳编码方式，同时提供熟悉的文本编辑体验。</p><h2 id="为什么选择-cursor" tabindex="-1">为什么选择 Cursor <a class="header-anchor" href="#为什么选择-cursor" aria-label="Permalink to &quot;为什么选择 Cursor&quot;">​</a></h2><p>如果您是 VS Code 用户，迁移到 Cursor 将是一个无缝的体验，因为 Cursor 是基于 VS Code 构建的，继承了其几乎所有功能，同时增加了强大的 AI 辅助功能。</p><p>通过迁移到 Cursor，您将获得：</p><ul><li>所有熟悉的 VS Code 功能和界面</li><li>强大的 AI 驱动编码功能</li><li>优化的工作流程和提高的生产力</li><li>持续更新的 AI 模型和功能</li></ul><h2 id="导入扩展、主题、设置和键盘绑定" tabindex="-1">导入扩展、主题、设置和键盘绑定 <a class="header-anchor" href="#导入扩展、主题、设置和键盘绑定" aria-label="Permalink to &quot;导入扩展、主题、设置和键盘绑定&quot;">​</a></h2><h3 id="一键迁移" tabindex="-1">一键迁移 <a class="header-anchor" href="#一键迁移" aria-label="Permalink to &quot;一键迁移&quot;">​</a></h3><p>Cursor 提供了一键迁移功能，可以轻松导入您的 VS Code 设置：</p><ol><li>首次启动 Cursor 时，系统会询问您是否要导入 VS Code 设置</li><li>选择您想导入的设置（扩展、用户设置、键盘快捷键）</li><li>点击确认，Cursor 将自动导入您选择的设置</li></ol><p>如果您已经跳过了初始设置，仍然可以手动导入：</p><ul><li>打开 Cursor 设置 (Cmd/Ctrl + Shift + J)</li><li>导航到&quot;通用 &gt; 账户&quot;部分</li><li>选择&quot;从 VS Code 导入设置&quot;</li></ul><h3 id="可以导入的设置" tabindex="-1">可以导入的设置 <a class="header-anchor" href="#可以导入的设置" aria-label="Permalink to &quot;可以导入的设置&quot;">​</a></h3><h4 id="_1-扩展" tabindex="-1">1. 扩展 <a class="header-anchor" href="#_1-扩展" aria-label="Permalink to &quot;1. 扩展&quot;">​</a></h4><p>Cursor 支持几乎所有 VS Code 扩展。导入后，您可以在 Cursor 中使用这些扩展，就像在 VS Code 中一样。</p><p>常见扩展的兼容性：</p><ul><li>语言扩展（如 Python、Java、JavaScript 等）- 完全兼容</li><li>工具扩展（如 Git 集成、Linters）- 完全兼容</li><li>UI 扩展（如主题、图标包）- 完全兼容</li><li>调试扩展 - 大部分兼容</li></ul><h4 id="_2-用户设置" tabindex="-1">2. 用户设置 <a class="header-anchor" href="#_2-用户设置" aria-label="Permalink to &quot;2. 用户设置&quot;">​</a></h4><p>Cursor 支持导入所有 VS Code 用户设置，包括：</p><ul><li>编辑器外观（字体、颜色、缩进等）</li><li>编辑器行为（自动保存、格式化等）</li><li>语言特定设置</li><li>工作区设置</li></ul><h4 id="_3-键盘快捷键" tabindex="-1">3. 键盘快捷键 <a class="header-anchor" href="#_3-键盘快捷键" aria-label="Permalink to &quot;3. 键盘快捷键&quot;">​</a></h4><p>Cursor 会导入您在 VS Code 中自定义的所有键盘快捷键，确保您可以立即使用熟悉的操作方式。</p><h2 id="保持更新" tabindex="-1">保持更新 <a class="header-anchor" href="#保持更新" aria-label="Permalink to &quot;保持更新&quot;">​</a></h2><p>Cursor 团队会定期将 Cursor 与最新版本的 VS Code 进行合并（rebase），确保您能够获得 VS Code 的最新功能和改进，同时享受 Cursor 的 AI 增强功能。</p><h2 id="为什么不是一个扩展" tabindex="-1">为什么不是一个扩展？ <a class="header-anchor" href="#为什么不是一个扩展" aria-label="Permalink to &quot;为什么不是一个扩展？&quot;">​</a></h2><p>作为独立应用程序，Cursor 能够更好地控制编辑器的 UI，实现更深度的 AI 集成。一些功能，如 Cursor Tab 和 CMD-K，无法作为现有编码环境的插件实现。</p><h2 id="设置" tabindex="-1">设置 <a class="header-anchor" href="#设置" aria-label="Permalink to &quot;设置&quot;">​</a></h2><p>Cursor 有两种不同的设置面板：</p><h3 id="cursor-设置" tabindex="-1">Cursor 设置 <a class="header-anchor" href="#cursor-设置" aria-label="Permalink to &quot;Cursor 设置&quot;">​</a></h3><ul><li>通过右上角的齿轮按钮、<code>Cmd/Ctrl + Shift + J</code> 或命令面板中输入 <code>Cursor Settings</code> 访问</li><li>配置 AI 功能和 Cursor 特定的首选项</li></ul><h3 id="vs-code-设置" tabindex="-1">VS Code 设置 <a class="header-anchor" href="#vs-code-设置" aria-label="Permalink to &quot;VS Code 设置&quot;">​</a></h3><ul><li>通过命令面板 (<code>Cmd/Ctrl + Shift + P</code>) 并输入 <code>VS Code Settings</code> 访问</li><li>调整编辑器行为和外观</li></ul><h2 id="界面差异" tabindex="-1">界面差异 <a class="header-anchor" href="#界面差异" aria-label="Permalink to &quot;界面差异&quot;">​</a></h2><h3 id="为什么-cursor-中的活动栏是水平的" tabindex="-1">为什么 Cursor 中的活动栏是水平的？ <a class="header-anchor" href="#为什么-cursor-中的活动栏是水平的" aria-label="Permalink to &quot;为什么 Cursor 中的活动栏是水平的？&quot;">​</a></h3><p>Cursor 默认将活动栏设置为水平布局，目的是为聊天功能节省空间。如果您更喜欢传统的垂直活动栏，可以通过以下步骤进行更改：</p><ol><li>打开 VS Code 设置</li><li>将 <code>workbench.activityBar.orientation</code> 设置为 <code>vertical</code></li><li>重启 Cursor</li></ol><h2 id="文件和工作区兼容性" tabindex="-1">文件和工作区兼容性 <a class="header-anchor" href="#文件和工作区兼容性" aria-label="Permalink to &quot;文件和工作区兼容性&quot;">​</a></h2><p>Cursor 与 VS Code 工作区和项目文件完全兼容：</p><ul><li><code>.vscode</code> 文件夹 - Cursor 可以读取和使用这些配置</li><li><code>settings.json</code> - 项目特定设置会被应用</li><li>任务和启动配置 - 可以正常工作</li><li>工作区文件 (<code>.code-workspace</code>) - 可以直接在 Cursor 中打开</li></ul><h2 id="区别和注意事项" tabindex="-1">区别和注意事项 <a class="header-anchor" href="#区别和注意事项" aria-label="Permalink to &quot;区别和注意事项&quot;">​</a></h2><p>虽然 Cursor 提供了与 VS Code 很高的兼容性，但仍然有一些区别需要注意：</p><ol><li><strong>AI 功能</strong>：Cursor 添加了额外的快捷键来触发 AI 功能，可能会与您的一些自定义快捷键冲突</li><li><strong>设置面板</strong>：Cursor 有自己的设置面板，用于配置 AI 功能</li><li><strong>扩展更新</strong>：某些扩展可能需要在 Cursor 中单独更新</li><li><strong>特定 VS Code 功能</strong>：极少数 VS Code 特有功能可能不完全相同</li></ol><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><p>为了确保顺利迁移，建议：</p><ol><li><strong>备份设置</strong>：在迁移前，备份您的 VS Code 设置（通常位于 <code>~/.config/Code/User</code> 或 <code>%APPDATA%\\Code\\User</code>）</li><li><strong>逐步适应</strong>：花时间熟悉 Cursor 特有的 AI 功能</li><li><strong>保留 VS Code</strong>：在完全适应 Cursor 之前，可以保留 VS Code 作为备用</li><li><strong>查看文档</strong>：阅读 Cursor 的文档，了解如何充分利用新功能</li></ol><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="我的某些扩展在-cursor-中不工作怎么办" tabindex="-1">我的某些扩展在 Cursor 中不工作怎么办？ <a class="header-anchor" href="#我的某些扩展在-cursor-中不工作怎么办" aria-label="Permalink to &quot;我的某些扩展在 Cursor 中不工作怎么办？&quot;">​</a></h3><p>大多数情况下，重新安装扩展或查看是否有更新可以解决问题。如果仍然不工作，可以在 Cursor 社区论坛中寻求帮助。</p><h3 id="我可以在同一台电脑上同时使用-vs-code-和-cursor-吗" tabindex="-1">我可以在同一台电脑上同时使用 VS Code 和 Cursor 吗？ <a class="header-anchor" href="#我可以在同一台电脑上同时使用-vs-code-和-cursor-吗" aria-label="Permalink to &quot;我可以在同一台电脑上同时使用 VS Code 和 Cursor 吗？&quot;">​</a></h3><p>是的，VS Code 和 Cursor 可以共存，不会相互干扰。</p><h3 id="cursor-会自动与我的-vs-code-设置同步吗" tabindex="-1">Cursor 会自动与我的 VS Code 设置同步吗？ <a class="header-anchor" href="#cursor-会自动与我的-vs-code-设置同步吗" aria-label="Permalink to &quot;Cursor 会自动与我的 VS Code 设置同步吗？&quot;">​</a></h3><p>不会自动同步。导入是一次性操作，如果您在 VS Code 中更改了设置，需要重新导入或在 Cursor 中手动更改。</p><h3 id="我的-vs-code-扩展授权在-cursor-中有效吗" tabindex="-1">我的 VS Code 扩展授权在 Cursor 中有效吗？ <a class="header-anchor" href="#我的-vs-code-扩展授权在-cursor-中有效吗" aria-label="Permalink to &quot;我的 VS Code 扩展授权在 Cursor 中有效吗？&quot;">​</a></h3><p>大多数情况下是有效的，因为扩展通常识别用户而不是编辑器。对于少数例外情况，可能需要重新授权。</p><hr><h2 id="迁移示例" tabindex="-1">迁移示例 <a class="header-anchor" href="#迁移示例" aria-label="Permalink to &quot;迁移示例&quot;">​</a></h2><h3 id="示例-导入-vs-code-设置" tabindex="-1">示例：导入 VS Code 设置 <a class="header-anchor" href="#示例-导入-vs-code-设置" aria-label="Permalink to &quot;示例：导入 VS Code 设置&quot;">​</a></h3><blockquote><p><strong>设置导入界面</strong>：Cursor 提供了一个简洁的导入界面，让您可以选择要导入的 VS Code 设置组件，包括扩展、用户设置和键盘快捷键。您只需勾选想要导入的项目，然后点击确认按钮即可完成导入。</p></blockquote><h3 id="示例-使用熟悉的快捷键" tabindex="-1">示例：使用熟悉的快捷键 <a class="header-anchor" href="#示例-使用熟悉的快捷键" aria-label="Permalink to &quot;示例：使用熟悉的快捷键&quot;">​</a></h3><p>Cursor 保留了所有 VS Code 的标准快捷键，例如：</p><ul><li><code>Ctrl+P</code> / <code>Cmd+P</code>: 快速打开文件</li><li><code>Ctrl+Shift+P</code> / <code>Cmd+Shift+P</code>: 命令面板</li><li><code>Ctrl+</code> / <code>Cmd+</code>：终端</li><li><code>F5</code>: 启动调试</li><li><code>Ctrl+Shift+G</code> / <code>Cmd+Shift+G</code>: Git 面板</li></ul><p>同时添加了新的 AI 功能快捷键：</p><ul><li><code>Ctrl+L</code> / <code>Cmd+L</code>: 打开 AI 聊天面板</li><li><code>Ctrl+K</code> / <code>Cmd+K</code>: 内联编辑或生成代码</li><li><code>Ctrl+I</code> / <code>Cmd+I</code>: 打开 Composer 多文件编辑</li></ul><hr><p>完成从 VS Code 迁移到 Cursor 后，您可以开始探索 Cursor 提供的强大 AI 功能。请查看<a href="/ai/cursor/introduction.html">入门介绍</a>了解如何开始使用这些功能，大幅提升您的编码效率！</p>',69)]))}const p=r(i,[["render",d]]);export{C as __pageData,p as default};
