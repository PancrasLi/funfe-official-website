import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.CPp4lspA.js";const c=JSON.parse('{"title":"Cursor 模型上下文协议","description":"","frontmatter":{},"headers":[],"relativePath":"ai/cursor/model-context-protocol.md","filePath":"ai/cursor/model-context-protocol.md","lastUpdated":1741509101000}'),e={name:"ai/cursor/model-context-protocol.md"};function l(p,s,r,h,d,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="cursor-模型上下文协议" tabindex="-1">Cursor 模型上下文协议 <a class="header-anchor" href="#cursor-模型上下文协议" aria-label="Permalink to &quot;Cursor 模型上下文协议&quot;">​</a></h1><blockquote><p><strong>免责声明</strong>：本文档是关于 Cursor 模型上下文协议的<strong>第三方非官方中文文档</strong>，仅供学习参考。内容可能不完全反映最新的官方信息，请以 <a href="https://docs.cursor.com" target="_blank" rel="noopener noreferrer">Cursor 官方文档</a> 为准。所有商标和版权归 Cursor/Anysphere 公司所有。</p></blockquote><blockquote><p>本文档介绍 Cursor 的模型上下文协议，这是一种高级技术，用于管理和优化发送给 AI 模型的上下文信息。</p></blockquote><hr><h2 id="什么是模型上下文协议" tabindex="-1">什么是模型上下文协议？ <a class="header-anchor" href="#什么是模型上下文协议" aria-label="Permalink to &quot;什么是模型上下文协议？&quot;">​</a></h2><p>模型上下文协议（Model Context Protocol，MCP）是 Cursor 中用于管理发送给底层 AI 模型的上下文信息的高级系统。这个协议决定了在各种 AI 交互中如何收集、组织、优先排序和发送上下文信息。</p><p>简而言之，MCP 是连接用户请求与 AI 模型之间的桥梁，它确保所有相关信息都能被高效地传递给模型，同时避免传递过多不必要的数据。</p><h2 id="为什么模型上下文协议很重要" tabindex="-1">为什么模型上下文协议很重要？ <a class="header-anchor" href="#为什么模型上下文协议很重要" aria-label="Permalink to &quot;为什么模型上下文协议很重要？&quot;">​</a></h2><p>当使用 AI 辅助编程时，上下文的质量直接决定了 AI 回答的准确性和相关性。MCP 解决了几个关键问题：</p><ol><li><strong>上下文窗口限制</strong>：所有 AI 模型都有上下文窗口大小限制，MCP 帮助在这个限制内优化信息</li><li><strong>相关性排序</strong>：确保最相关的信息被优先发送给模型</li><li><strong>信息格式化</strong>：以模型能有效理解的方式结构化信息</li><li><strong>上下文管理</strong>：平衡不同类型的上下文（代码、注释、文档等）</li></ol><h2 id="模型上下文协议的工作原理" tabindex="-1">模型上下文协议的工作原理 <a class="header-anchor" href="#模型上下文协议的工作原理" aria-label="Permalink to &quot;模型上下文协议的工作原理&quot;">​</a></h2><h3 id="_1-上下文收集" tabindex="-1">1. 上下文收集 <a class="header-anchor" href="#_1-上下文收集" aria-label="Permalink to &quot;1. 上下文收集&quot;">​</a></h3><p>当您在 Cursor 中与 AI 交互时（如使用 Ask、Agent 或 ⌘K），MCP 会从多个来源收集上下文：</p><ul><li>当前文件和光标位置</li><li>手动指定的引用（通过 @ 符号）</li><li>代码库索引中的相关文件</li><li>之前的对话历史</li><li>项目设置和配置</li><li>AI 规则</li></ul><h3 id="_2-上下文加权和排序" tabindex="-1">2. 上下文加权和排序 <a class="header-anchor" href="#_2-上下文加权和排序" aria-label="Permalink to &quot;2. 上下文加权和排序&quot;">​</a></h3><p>收集的上下文经过加权和排序过程：</p><ul><li><strong>相关性评分</strong>：计算每部分上下文与当前查询的相关性</li><li><strong>重要性加权</strong>：明确引用的文件获得更高权重</li><li><strong>近期性考量</strong>：最近访问的文件通常获得更高优先级</li><li><strong>位置敏感性</strong>：与光标位置接近的代码获得更高优先级</li></ul><h3 id="_3-上下文压缩" tabindex="-1">3. 上下文压缩 <a class="header-anchor" href="#_3-上下文压缩" aria-label="Permalink to &quot;3. 上下文压缩&quot;">​</a></h3><p>为了适应模型的上下文窗口限制，MCP 会执行上下文压缩：</p><ul><li><strong>选择性包含</strong>：仅包含最相关部分，而非整个文件</li><li><strong>内容摘要</strong>：对某些内容创建摘要而非完整包含</li><li><strong>冗余消除</strong>：删除重复或高度相似的上下文部分</li><li><strong>格式优化</strong>：减少不必要的空白和格式，最大化有效内容</li></ul><h3 id="_4-格式化和传输" tabindex="-1">4. 格式化和传输 <a class="header-anchor" href="#_4-格式化和传输" aria-label="Permalink to &quot;4. 格式化和传输&quot;">​</a></h3><p>最后，上下文被格式化并传输给 AI 模型：</p><ul><li><strong>结构化标记</strong>：添加标记以指示上下文部分的起始和结束</li><li><strong>源标注</strong>：标注每部分上下文的来源，帮助模型理解来源和重要性</li><li><strong>顺序排列</strong>：按最优顺序排列上下文（通常从最重要到次要）</li><li><strong>传输优化</strong>：分批传输大型上下文，确保效率和完整性</li></ul><h2 id="模型上下文协议的配置" tabindex="-1">模型上下文协议的配置 <a class="header-anchor" href="#模型上下文协议的配置" aria-label="Permalink to &quot;模型上下文协议的配置&quot;">​</a></h2><p>虽然大多数 MCP 功能在后台自动工作，但有一些方式可以影响和优化它：</p><h3 id="通过设置配置" tabindex="-1">通过设置配置 <a class="header-anchor" href="#通过设置配置" aria-label="Permalink to &quot;通过设置配置&quot;">​</a></h3><p>某些 MCP 行为可以通过 Cursor 设置进行配置：</p><ol><li>打开 Cursor 设置（⌘ + , 或 Ctrl + ,）</li><li>导航至 &quot;高级&quot; 或 &quot;AI 设置&quot; 部分</li><li>寻找关于上下文管理的选项</li></ol><p>可能的设置包括：</p><ul><li>最大上下文窗口大小</li><li>上下文优先级规则</li><li>自动包含的上下文类型</li></ul><h3 id="通过-ai-规则" tabindex="-1">通过 AI 规则 <a class="header-anchor" href="#通过-ai-规则" aria-label="Permalink to &quot;通过 AI 规则&quot;">​</a></h3><p>您可以通过 AI 规则影响 MCP 的行为：</p><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 上下文处理规则</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 优先考虑接口和类型定义</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 当分析函数时包含其测试</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 排除注释中的 TODO 项</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="通过使用习惯" tabindex="-1">通过使用习惯 <a class="header-anchor" href="#通过使用习惯" aria-label="Permalink to &quot;通过使用习惯&quot;">​</a></h3><p>您的使用习惯也会影响 MCP 的工作方式：</p><ul><li>频繁访问的文件可能获得更高的隐式优先级</li><li>之前查询模式会影响上下文收集策略</li><li>成功的交互会强化特定的上下文选择模式</li></ul><h2 id="高级-mcp-使用技巧" tabindex="-1">高级 MCP 使用技巧 <a class="header-anchor" href="#高级-mcp-使用技巧" aria-label="Permalink to &quot;高级 MCP 使用技巧&quot;">​</a></h2><h3 id="_1-精确控制上下文" tabindex="-1">1. 精确控制上下文 <a class="header-anchor" href="#_1-精确控制上下文" aria-label="Permalink to &quot;1. 精确控制上下文&quot;">​</a></h3><p>通过明确的指令控制上下文：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>仅使用 @src/core/ 中的文件作为上下文，忽略测试文件，解释这个模块的架构。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-上下文启发式调整" tabindex="-1">2. 上下文启发式调整 <a class="header-anchor" href="#_2-上下文启发式调整" aria-label="Permalink to &quot;2. 上下文启发式调整&quot;">​</a></h3><p>帮助 MCP 调整其启发式方法：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>这个部分与数据库连接相关，请特别注意错误处理模式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-利用会话状态" tabindex="-1">3. 利用会话状态 <a class="header-anchor" href="#_3-利用会话状态" aria-label="Permalink to &quot;3. 利用会话状态&quot;">​</a></h3><p>MCP 保持会话状态，利用这一点可以构建上下文：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>让我们先了解数据模型，然后再看控制器如何使用它们。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-结合代码搜索" tabindex="-1">4. 结合代码搜索 <a class="header-anchor" href="#_4-结合代码搜索" aria-label="Permalink to &quot;4. 结合代码搜索&quot;">​</a></h3><p>与代码搜索结合使用获得更好的上下文：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>搜索所有使用 UserAuthentication 类的控制器，并解释调用模式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="自定义-mcp-详解" tabindex="-1">自定义 MCP 详解 <a class="header-anchor" href="#自定义-mcp-详解" aria-label="Permalink to &quot;自定义 MCP 详解&quot;">​</a></h2><p>除了基本配置外，Cursor 还提供了多种途径来深度自定义 MCP 的行为，使其更好地适应您的特定工作流程和项目需求。</p><h3 id="mcp-配置文件" tabindex="-1">MCP 配置文件 <a class="header-anchor" href="#mcp-配置文件" aria-label="Permalink to &quot;MCP 配置文件&quot;">​</a></h3><p>Cursor 支持通过项目根目录中的 <code>.cursor</code> 文件夹下的配置文件来自定义 MCP 行为。您可以创建以下文件来调整 MCP：</p><h4 id="_1-创建-mcp-配置文件" tabindex="-1">1. 创建 MCP 配置文件 <a class="header-anchor" href="#_1-创建-mcp-配置文件" aria-label="Permalink to &quot;1. 创建 MCP 配置文件&quot;">​</a></h4><p>在项目根目录创建 <code>.cursor/mcp.json</code> 文件，使用以下基本结构：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;priorityPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*.interface.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;very_high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*.test.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;exclusionPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;**/*.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;**/node_modules/**&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;**/dist/**&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;includeComments&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;maxTokensPerFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;contextWindow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;large&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;prioritizeRecent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="_2-配置选项详解" tabindex="-1">2. 配置选项详解 <a class="header-anchor" href="#_2-配置选项详解" aria-label="Permalink to &quot;2. 配置选项详解&quot;">​</a></h4><ul><li><p><strong>priorityPatterns</strong>: 定义文件模式的优先级</p><ul><li><code>pattern</code>: glob 模式匹配文件路径</li><li><code>priority</code>: 优先级级别 (<code>very_high</code>, <code>high</code>, <code>normal</code>, <code>low</code>, <code>very_low</code>)</li></ul></li><li><p><strong>exclusionPatterns</strong>: 从 MCP 处理中完全排除的文件模式</p></li><li><p><strong>includeComments</strong>: 是否在上下文中包含代码注释</p></li><li><p><strong>maxTokensPerFile</strong>: 每个文件贡献给上下文的最大标记数</p></li><li><p><strong>contextWindow</strong>:</p><ul><li><code>size</code>: 上下文窗口大小 (<code>small</code>, <code>medium</code>, <code>large</code>, <code>very_large</code>)</li><li><code>prioritizeRecent</code>: 是否优先考虑最近交互的文件</li></ul></li></ul><h3 id="基于语言的-mcp-自定义" tabindex="-1">基于语言的 MCP 自定义 <a class="header-anchor" href="#基于语言的-mcp-自定义" aria-label="Permalink to &quot;基于语言的 MCP 自定义&quot;">​</a></h3><p>可以为不同编程语言创建特定的 MCP 规则，例如 <code>.cursor/mcp-typescript.json</code>：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;fileTypes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.tsx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;importResolution&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deep&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;includeTypes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;prioritizeInterfaces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>此配置将仅应用于 TypeScript 文件，确保类型定义得到适当的优先级处理。</p><h3 id="会话特定的-mcp-指令" tabindex="-1">会话特定的 MCP 指令 <a class="header-anchor" href="#会话特定的-mcp-指令" aria-label="Permalink to &quot;会话特定的 MCP 指令&quot;">​</a></h3><p>在与 AI 的对话中，您可以使用特殊的指令临时修改 MCP 行为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#mcp-setting: prioritize_definitions=true</span></span>
<span class="line"><span>#mcp-setting: deep_context=false</span></span>
<span class="line"><span>#mcp-setting: code_only=true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>请解释这个函数的作用和它如何与其他模块交互。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这些指令会在当前会话中临时覆盖默认的 MCP 设置。</p><h2 id="mcp-自定义示例场景" tabindex="-1">MCP 自定义示例场景 <a class="header-anchor" href="#mcp-自定义示例场景" aria-label="Permalink to &quot;MCP 自定义示例场景&quot;">​</a></h2><p>以下是在不同场景中自定义 MCP 的具体示例：</p><h3 id="示例-1-大型前端项目优化" tabindex="-1">示例 1: 大型前端项目优化 <a class="header-anchor" href="#示例-1-大型前端项目优化" aria-label="Permalink to &quot;示例 1: 大型前端项目优化&quot;">​</a></h3><p>对于有大量组件的 React 项目，以下 MCP 配置有助于优化组件分析：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;priorityPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/components/**/*.{jsx,tsx}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/hooks/**/*.{js,ts}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/store/**/*.{js,ts}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;componentResolution&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeStyles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeProps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;maxDepth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>使用此配置时，如果您询问有关组件的问题，MCP 会优先考虑组件文件、相关钩子和状态管理代码，同时降低样式文件的优先级，为更重要的逻辑代码腾出上下文空间。</p><p><strong>会话示例</strong>：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/components/UserProfile.jsx 这个组件如何从 Redux 存储获取和更新用户数据？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>MCP 会自动包含组件文件、相关的 Redux actions 和 reducers，以及使用的自定义钩子，使 AI 能够提供全面的回答。</p><h3 id="示例-2-微服务后端项目配置" tabindex="-1">示例 2: 微服务后端项目配置 <a class="header-anchor" href="#示例-2-微服务后端项目配置" aria-label="Permalink to &quot;示例 2: 微服务后端项目配置&quot;">​</a></h3><p>对于微服务架构的后端项目，以下配置有助于跨服务分析：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;priorityPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;services/*/src/interfaces/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;very_high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;services/*/src/controllers/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;services/*/src/models/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;services/*/src/repositories/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;services/*/test/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;very_low&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;serviceIntegration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeAPIDocs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;trackDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p><strong>会话示例</strong>：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>我需要了解用户服务和订单服务是如何交互的，特别是当创建新订单时。请分析这两个服务之间的数据流。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用此配置，MCP 会优先加载接口定义、控制器和模型，帮助 AI 理解服务间的交互模式，而测试文件则获得最低优先级。</p><h3 id="示例-3-机器学习项目配置" tabindex="-1">示例 3: 机器学习项目配置 <a class="header-anchor" href="#示例-3-机器学习项目配置" aria-label="Permalink to &quot;示例 3: 机器学习项目配置&quot;">​</a></h3><p>对于机器学习项目，以下配置关注数据处理和模型定义：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;priorityPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/models/**/*.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;very_high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/data/**/*.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;notebooks/**/*.ipynb&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;mlSpecific&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeDataSchemas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;modelArchitectureFocus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeHyperparameters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;maxTokensPerFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>会话示例</strong>：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@src/models/classifier.py 如何优化这个分类器模型来处理不平衡的数据集？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此配置使 MCP 优先考虑模型定义和数据处理代码，为每个文件分配更多的标记空间，并确保包含数据架构和超参数配置。</p><h3 id="示例-4-动态调整-mcp-行为" tabindex="-1">示例 4: 动态调整 MCP 行为 <a class="header-anchor" href="#示例-4-动态调整-mcp-行为" aria-label="Permalink to &quot;示例 4: 动态调整 MCP 行为&quot;">​</a></h3><p>在对话过程中动态调整 MCP 的例子：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>首先，我想了解这个项目的整体架构。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#mcp-setting: broad_context=true</span></span>
<span class="line"><span>#mcp-setting: depth=1</span></span>
<span class="line"><span>#mcp-setting: include_readmes=true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>现在，我想深入了解认证模块的工作原理。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#mcp-setting: broad_context=false</span></span>
<span class="line"><span>#mcp-setting: focus_path=src/auth/**</span></span>
<span class="line"><span>#mcp-setting: depth=3</span></span>
<span class="line"><span>#mcp-setting: include_tests=true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@src/auth/AuthProvider.js 这个组件中的 token 刷新逻辑有什么潜在问题？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>这个例子展示了如何在同一会话中针对不同的探索阶段调整 MCP 的行为：先是宽泛地了解项目结构，然后深入特定模块的细节。</p><h2 id="mcp-优化与调试" tabindex="-1">MCP 优化与调试 <a class="header-anchor" href="#mcp-优化与调试" aria-label="Permalink to &quot;MCP 优化与调试&quot;">​</a></h2><h3 id="mcp-性能指标监控" tabindex="-1">MCP 性能指标监控 <a class="header-anchor" href="#mcp-性能指标监控" aria-label="Permalink to &quot;MCP 性能指标监控&quot;">​</a></h3><p>Cursor 提供了监控 MCP 性能的工具，可以通过以下方式访问：</p><ol><li>打开命令面板（⌘ + Shift + P 或 Ctrl + Shift + P）</li><li>搜索并选择 &quot;Show MCP Performance Metrics&quot;</li></ol><p>这将显示一个性能面板，包含以下信息：</p><ul><li>上下文收集时间</li><li>上下文大小（标记数）</li><li>相关性排序效率</li><li>文件包含/排除统计</li></ul><h3 id="mcp-自定义日志" tabindex="-1">MCP 自定义日志 <a class="header-anchor" href="#mcp-自定义日志" aria-label="Permalink to &quot;MCP 自定义日志&quot;">​</a></h3><p>要深入了解 MCP 的行为，可以启用详细日志：</p><ol><li>创建 <code>.cursor/mcp-debug.json</code> 文件：</li></ol><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;logging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;verbose&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;logToFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;logFilePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.cursor/logs/mcp.log&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>分析日志以优化 MCP 配置，识别模式如： <ul><li>频繁包含但从未使用的文件</li><li>经常被截断的重要文件</li><li>优先级设置不合理的文件类型</li></ul></li></ol><h3 id="mcp-测试工具" tabindex="-1">MCP 测试工具 <a class="header-anchor" href="#mcp-测试工具" aria-label="Permalink to &quot;MCP 测试工具&quot;">​</a></h3><p>Cursor 提供了测试 MCP 配置的工具：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在终端中运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cursor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;分析用户认证流程&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/auth/login.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这将显示 MCP 如何处理特定查询和文件的详细信息，包括：</p><ul><li>收集的上下文列表</li><li>每个上下文项的优先级和权重</li><li>最终包含/排除的内容</li></ul><h2 id="mcp-与其他工具的集成" tabindex="-1">MCP 与其他工具的集成 <a class="header-anchor" href="#mcp-与其他工具的集成" aria-label="Permalink to &quot;MCP 与其他工具的集成&quot;">​</a></h2><h3 id="mcp-与版本控制系统" tabindex="-1">MCP 与版本控制系统 <a class="header-anchor" href="#mcp-与版本控制系统" aria-label="Permalink to &quot;MCP 与版本控制系统&quot;">​</a></h3><p>MCP 可以与 Git 等版本控制系统集成，关注最近更改的文件：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;gitIntegration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;prioritizeModifiedFiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;includeRecentCommits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;branchAware&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>这使 MCP 能够优先考虑最近修改的文件和当前工作的分支相关内容。</p><h3 id="mcp-与项目管理工具" tabindex="-1">MCP 与项目管理工具 <a class="header-anchor" href="#mcp-与项目管理工具" aria-label="Permalink to &quot;MCP 与项目管理工具&quot;">​</a></h3><p>MCP 可以通过 Cursor 扩展与 JIRA、Trello 等项目管理工具集成：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;contextSettings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;externalIntegrations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;jira&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;includeCurrentTicket&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>这允许 MCP 将当前任务的上下文纳入考虑，提供更加任务相关的 AI 回答。</p><h2 id="mcp-性能考量" tabindex="-1">MCP 性能考量 <a class="header-anchor" href="#mcp-性能考量" aria-label="Permalink to &quot;MCP 性能考量&quot;">​</a></h2><h3 id="大型代码库的挑战" tabindex="-1">大型代码库的挑战 <a class="header-anchor" href="#大型代码库的挑战" aria-label="Permalink to &quot;大型代码库的挑战&quot;">​</a></h3><p>在大型代码库中，MCP 可能面临更大挑战：</p><ul><li><strong>索引规模</strong>：需要索引和管理更多文件</li><li><strong>相关性计算</strong>：识别相关文件变得更复杂</li><li><strong>上下文窗口压力</strong>：更多潜在相关内容竞争有限的上下文窗口</li></ul><p>解决方案包括：</p><ul><li>更精确的 @ 符号引用</li><li>更有效的 <code>.cursorignore</code> 配置</li><li>分段处理和逐步引导AI</li></ul><h3 id="专业领域代码的优化" tabindex="-1">专业领域代码的优化 <a class="header-anchor" href="#专业领域代码的优化" aria-label="Permalink to &quot;专业领域代码的优化&quot;">​</a></h3><p>对于特定领域的代码（如医疗、金融或科学计算），可以优化 MCP：</p><ul><li>强调领域特定术语和模式</li><li>确保包含关键的领域模型</li><li>通过 AI 规则提供领域背景</li></ul><h2 id="疑难解答" tabindex="-1">疑难解答 <a class="header-anchor" href="#疑难解答" aria-label="Permalink to &quot;疑难解答&quot;">​</a></h2><h3 id="上下文不足" tabindex="-1">上下文不足 <a class="header-anchor" href="#上下文不足" aria-label="Permalink to &quot;上下文不足&quot;">​</a></h3><p>如果 AI 回答显示上下文不足（&quot;我没有足够信息&quot;），可能原因包括：</p><ul><li>相关文件未被索引</li><li>上下文窗口太小无法包含所有必要信息</li><li>重要引用被忽略文件规则排除</li></ul><p>解决方法：</p><ul><li>使用更精确的 @ 引用</li><li>拆分复杂查询为多个简单查询</li><li>检查忽略规则是否排除了关键文件</li></ul><h3 id="上下文不相关" tabindex="-1">上下文不相关 <a class="header-anchor" href="#上下文不相关" aria-label="Permalink to &quot;上下文不相关&quot;">​</a></h3><p>如果 AI 提供的答案引用了不相关代码：</p><ul><li>尝试使用更具体的查询语言</li><li>明确排除不相关部分（&quot;不要考虑测试代码&quot;）</li><li>使用更精确的文件和符号引用</li></ul><h3 id="上下文传输延迟" tabindex="-1">上下文传输延迟 <a class="header-anchor" href="#上下文传输延迟" aria-label="Permalink to &quot;上下文传输延迟&quot;">​</a></h3><p>对于大型上下文，您可能注意到：</p><ul><li>初始响应较慢</li><li>模型需要更多时间&quot;思考&quot;</li><li>多轮交互后性能提升</li></ul><p>这通常是因为完整上下文正在逐步构建和优化。保持耐心并继续对话通常会改善后续交互的性能。</p><h3 id="mcp-缓存问题" tabindex="-1">MCP 缓存问题 <a class="header-anchor" href="#mcp-缓存问题" aria-label="Permalink to &quot;MCP 缓存问题&quot;">​</a></h3><p>如果您修改了 MCP 配置但没有看到变化：</p><ul><li>重启 Cursor 应用程序</li><li>清除 MCP 缓存： <ul><li>打开命令面板</li><li>搜索并运行 &quot;Clear MCP Cache&quot;</li></ul></li><li>确认配置文件格式正确且位于正确位置</li></ul><h2 id="结论与最佳实践" tabindex="-1">结论与最佳实践 <a class="header-anchor" href="#结论与最佳实践" aria-label="Permalink to &quot;结论与最佳实践&quot;">​</a></h2><h3 id="mcp-自定义最佳实践" tabindex="-1">MCP 自定义最佳实践 <a class="header-anchor" href="#mcp-自定义最佳实践" aria-label="Permalink to &quot;MCP 自定义最佳实践&quot;">​</a></h3><ol><li><strong>渐进式自定义</strong>：先使用默认设置，基于实际需求逐步调整</li><li><strong>项目特定配置</strong>：为不同类型的项目创建不同的 MCP 配置</li><li><strong>配置版本控制</strong>：将 MCP 配置加入版本控制，团队共享</li><li><strong>定期更新</strong>：随着项目演变和 Cursor 更新，定期评估和调整 MCP 设置</li><li><strong>监控性能</strong>：使用性能指标识别瓶颈和优化机会</li></ol><h3 id="mcp-与-符号引用的协同" tabindex="-1">MCP 与 @ 符号引用的协同 <a class="header-anchor" href="#mcp-与-符号引用的协同" aria-label="Permalink to &quot;MCP 与 @ 符号引用的协同&quot;">​</a></h3><p>MCP 与 @ 符号引用系统紧密结合，为获得最佳结果：</p><ul><li>使用 @ 引用明确指定关键文件</li><li>通过 MCP 配置指示隐含相关性</li><li>建立分层的上下文策略：明确引用 → 高优先级模式 → 自动相关</li></ul><h2 id="mcp-配置项功能与用法总结表" tabindex="-1">MCP 配置项功能与用法总结表 <a class="header-anchor" href="#mcp-配置项功能与用法总结表" aria-label="Permalink to &quot;MCP 配置项功能与用法总结表&quot;">​</a></h2><h3 id="基本配置项-cursor-mcp-json" tabindex="-1">基本配置项 (.cursor/mcp.json) <a class="header-anchor" href="#基本配置项-cursor-mcp-json" aria-label="Permalink to &quot;基本配置项 (.cursor/mcp.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">功能描述</th><th style="text-align:left;">可选值</th><th style="text-align:left;">使用示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>version</code></td><td style="text-align:left;">配置文件版本号</td><td style="text-align:left;">整数值(通常为1)</td><td style="text-align:left;"><code>&quot;version&quot;: 1</code></td></tr><tr><td style="text-align:left;"><code>priorityPatterns</code></td><td style="text-align:left;">定义文件匹配模式优先级</td><td style="text-align:left;">对象数组</td><td style="text-align:left;"><code>[{&quot;pattern&quot;: &quot;**/*.ts&quot;, &quot;priority&quot;: &quot;high&quot;}]</code></td></tr><tr><td style="text-align:left;"><code>priority</code></td><td style="text-align:left;">设置文件优先级等级</td><td style="text-align:left;"><code>very_high</code>, <code>high</code>, <code>normal</code>, <code>low</code>, <code>very_low</code></td><td style="text-align:left;"><code>&quot;priority&quot;: &quot;high&quot;</code></td></tr><tr><td style="text-align:left;"><code>exclusionPatterns</code></td><td style="text-align:left;">排除特定文件模式</td><td style="text-align:left;">字符串数组</td><td style="text-align:left;"><code>[&quot;**/node_modules/**&quot;, &quot;**/*.min.js&quot;]</code></td></tr><tr><td style="text-align:left;"><code>includeComments</code></td><td style="text-align:left;">是否包含代码注释</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;includeComments&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>maxTokensPerFile</code></td><td style="text-align:left;">每个文件最大标记数</td><td style="text-align:left;">整数值</td><td style="text-align:left;"><code>&quot;maxTokensPerFile&quot;: 2000</code></td></tr><tr><td style="text-align:left;"><code>contextWindow.size</code></td><td style="text-align:left;">上下文窗口大小</td><td style="text-align:left;"><code>small</code>, <code>medium</code>, <code>large</code>, <code>very_large</code></td><td style="text-align:left;"><code>&quot;size&quot;: &quot;large&quot;</code></td></tr><tr><td style="text-align:left;"><code>contextWindow.prioritizeRecent</code></td><td style="text-align:left;">优先考虑最近文件</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;prioritizeRecent&quot;: true</code></td></tr></tbody></table><h3 id="语言特定配置项-cursor-mcp-language-json" tabindex="-1">语言特定配置项 (.cursor/mcp-[language].json) <a class="header-anchor" href="#语言特定配置项-cursor-mcp-language-json" aria-label="Permalink to &quot;语言特定配置项 (.cursor/mcp-[language].json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">功能描述</th><th style="text-align:left;">可选值</th><th style="text-align:left;">使用示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fileTypes</code></td><td style="text-align:left;">适用的文件类型</td><td style="text-align:left;">字符串数组</td><td style="text-align:left;"><code>[&quot;.ts&quot;, &quot;.tsx&quot;]</code></td></tr><tr><td style="text-align:left;"><code>importResolution</code></td><td style="text-align:left;">导入解析深度</td><td style="text-align:left;"><code>shallow</code>, <code>deep</code></td><td style="text-align:left;"><code>&quot;importResolution&quot;: &quot;deep&quot;</code></td></tr><tr><td style="text-align:left;"><code>includeTypes</code></td><td style="text-align:left;">是否包含类型定义</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;includeTypes&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>prioritizeInterfaces</code></td><td style="text-align:left;">优先处理接口</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;prioritizeInterfaces&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>componentResolution</code></td><td style="text-align:left;">组件分析设置</td><td style="text-align:left;">对象</td><td style="text-align:left;"><code>{&quot;includeStyles&quot;: true, &quot;maxDepth&quot;: 2}</code></td></tr><tr><td style="text-align:left;"><code>mlSpecific</code></td><td style="text-align:left;">机器学习项目设置</td><td style="text-align:left;">对象</td><td style="text-align:left;"><code>{&quot;includeDataSchemas&quot;: true}</code></td></tr></tbody></table><h3 id="会话特定mcp指令-在对话中使用" tabindex="-1">会话特定MCP指令 (在对话中使用) <a class="header-anchor" href="#会话特定mcp指令-在对话中使用" aria-label="Permalink to &quot;会话特定MCP指令 (在对话中使用)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">功能描述</th><th style="text-align:left;">可选值</th><th style="text-align:left;">使用示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>prioritize_definitions</code></td><td style="text-align:left;">优先考虑定义</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: prioritize_definitions=true</code></td></tr><tr><td style="text-align:left;"><code>deep_context</code></td><td style="text-align:left;">使用深度上下文</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: deep_context=false</code></td></tr><tr><td style="text-align:left;"><code>code_only</code></td><td style="text-align:left;">只包含代码</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: code_only=true</code></td></tr><tr><td style="text-align:left;"><code>broad_context</code></td><td style="text-align:left;">使用广泛上下文</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: broad_context=true</code></td></tr><tr><td style="text-align:left;"><code>depth</code></td><td style="text-align:left;">上下文深度级别</td><td style="text-align:left;">整数值</td><td style="text-align:left;"><code>#mcp-setting: depth=3</code></td></tr><tr><td style="text-align:left;"><code>focus_path</code></td><td style="text-align:left;">聚焦特定路径</td><td style="text-align:left;">字符串</td><td style="text-align:left;"><code>#mcp-setting: focus_path=src/auth/**</code></td></tr><tr><td style="text-align:left;"><code>include_tests</code></td><td style="text-align:left;">包含测试文件</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: include_tests=true</code></td></tr><tr><td style="text-align:left;"><code>include_readmes</code></td><td style="text-align:left;">包含README文件</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>#mcp-setting: include_readmes=true</code></td></tr></tbody></table><h3 id="版本控制与工具集成配置" tabindex="-1">版本控制与工具集成配置 <a class="header-anchor" href="#版本控制与工具集成配置" aria-label="Permalink to &quot;版本控制与工具集成配置&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">功能描述</th><th style="text-align:left;">可选值</th><th style="text-align:left;">使用示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>gitIntegration.prioritizeModifiedFiles</code></td><td style="text-align:left;">优先考虑已修改文件</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;prioritizeModifiedFiles&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>gitIntegration.includeRecentCommits</code></td><td style="text-align:left;">包含最近提交信息</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;includeRecentCommits&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>gitIntegration.branchAware</code></td><td style="text-align:left;">分支感知能力</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;branchAware&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>externalIntegrations.jira.enabled</code></td><td style="text-align:left;">启用JIRA集成</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;enabled&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>externalIntegrations.jira.includeCurrentTicket</code></td><td style="text-align:left;">包含当前JIRA工单</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;includeCurrentTicket&quot;: true</code></td></tr></tbody></table><h3 id="调试与性能配置-cursor-mcp-debug-json" tabindex="-1">调试与性能配置 (.cursor/mcp-debug.json) <a class="header-anchor" href="#调试与性能配置-cursor-mcp-debug-json" aria-label="Permalink to &quot;调试与性能配置 (.cursor/mcp-debug.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">功能描述</th><th style="text-align:left;">可选值</th><th style="text-align:left;">使用示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>logging.enabled</code></td><td style="text-align:left;">启用日志记录</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;enabled&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>logging.level</code></td><td style="text-align:left;">日志详细程度</td><td style="text-align:left;"><code>info</code>, <code>debug</code>, <code>verbose</code></td><td style="text-align:left;"><code>&quot;level&quot;: &quot;verbose&quot;</code></td></tr><tr><td style="text-align:left;"><code>logging.logToFile</code></td><td style="text-align:left;">记录到文件</td><td style="text-align:left;"><code>true</code>, <code>false</code></td><td style="text-align:left;"><code>&quot;logToFile&quot;: true</code></td></tr><tr><td style="text-align:left;"><code>logging.logFilePath</code></td><td style="text-align:left;">日志文件路径</td><td style="text-align:left;">字符串</td><td style="text-align:left;"><code>&quot;logFilePath&quot;: &quot;.cursor/logs/mcp.log&quot;</code></td></tr></tbody></table><hr><p>理解并有效利用模型上下文协议可以显著提高您与 Cursor AI 功能的交互效果。虽然大部分工作在后台自动进行，但通过有意识地提供良好结构的查询和适当的引用，您可以帮助 MCP 更好地为您服务，从而获得更精确、更有用的 AI 辅助。</p><p>如有任何问题，请参考<a href="/ai/cursor/faq.html">常见问题解答</a>或访问<a href="https://forum.cursor.com" target="_blank" rel="noopener noreferrer">社区论坛</a>寻求帮助。</p>`,161)]))}const u=a(e,[["render",l]]);export{c as __pageData,u as default};
