import{_ as a,c as i,o as r,ag as n}from"./chunks/framework.CPp4lspA.js";const u=JSON.parse('{"title":"Cursor AI 提交信息","description":"","frontmatter":{},"headers":[],"relativePath":"ai/cursor/commit.md","filePath":"ai/cursor/commit.md","lastUpdated":1741509101000}'),e={name:"ai/cursor/commit.md"};function t(o,s,l,p,h,c){return r(),i("div",null,s[0]||(s[0]=[n(`<h1 id="cursor-ai-提交信息" tabindex="-1">Cursor AI 提交信息 <a class="header-anchor" href="#cursor-ai-提交信息" aria-label="Permalink to &quot;Cursor AI 提交信息&quot;">​</a></h1><blockquote><p><strong>免责声明</strong>：本文档是 <a href="https://docs.cursor.com/more/ai-commit-message" target="_blank" rel="noopener noreferrer">Cursor 官方文档中的 AI 提交信息功能页面</a>的<strong>第三方非官方中文翻译</strong>，仅供学习参考。内容可能不完全反映最新的官方信息，请以 <a href="https://docs.cursor.com" target="_blank" rel="noopener noreferrer">Cursor 官方文档</a> 为准。所有商标和版权归 Cursor/Anysphere 公司所有。</p></blockquote><blockquote><p>本文档介绍如何在 Cursor 中使用闪光图标或快捷键自动生成 Git 提交信息。</p></blockquote><hr><h2 id="自动生成提交信息" tabindex="-1">自动生成提交信息 <a class="header-anchor" href="#自动生成提交信息" aria-label="Permalink to &quot;自动生成提交信息&quot;">​</a></h2><p>Cursor 可以帮助您只需一次点击就为您的更改生成有意义的提交信息。以下是使用此功能的方法：</p><ol><li>暂存您想要提交的文件</li><li>在侧边栏中打开 Git 标签页</li><li>在提交信息输入字段旁边寻找闪光（✨）图标</li><li>点击闪光图标，根据您的暂存更改生成提交信息</li></ol><p>生成的提交信息将基于您的暂存文件中的更改和您的代码库的 Git 历史记录。这意味着 Cursor 会分析您当前的更改和以前的提交信息，以生成上下文相关的消息。Cursor 会从您的提交历史中学习，这意味着如果您使用诸如 Conventional Commits 之类的约定，生成的消息将遵循相同的模式。</p><h2 id="快捷键设置" tabindex="-1">快捷键设置 <a class="header-anchor" href="#快捷键设置" aria-label="Permalink to &quot;快捷键设置&quot;">​</a></h2><p>您可以为生成提交信息功能绑定键盘快捷键。</p><ol><li>转到键盘快捷键 <code>⌘R ⌘S</code> 或 <code>⌘⇧P</code> 并搜索 &quot;Open Keyboard Shortcuts (JSON)&quot;</li><li>添加以下内容到文件中，将其绑定到 <code>⌘M</code>：</li></ol><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cmd+m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cursor.generateGitCommitMessage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="3"><li>保存文件，设置完成！</li></ol><p>在 Windows 和 Linux 系统上，您可以使用 <code>ctrl</code> 替代 <code>cmd</code>：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl+m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cursor.generateGitCommitMessage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="提交信息生成的工作原理" tabindex="-1">提交信息生成的工作原理 <a class="header-anchor" href="#提交信息生成的工作原理" aria-label="Permalink to &quot;提交信息生成的工作原理&quot;">​</a></h2><p>当您点击闪光图标或使用快捷键时，Cursor 会：</p><ol><li><strong>分析暂存更改</strong>：检查暂存文件中的所有更改，包括新增、修改和删除的代码</li><li><strong>参考历史记录</strong>：查看您的存储库中之前的提交信息，以了解您的提交风格和约定</li><li><strong>生成上下文相关信息</strong>：创建简洁、描述性的提交信息，准确反映您所做的更改</li><li><strong>自动填充</strong>：将生成的信息自动填充到提交信息输入字段中</li></ol><h2 id="优化提交信息效果的方法" tabindex="-1">优化提交信息效果的方法 <a class="header-anchor" href="#优化提交信息效果的方法" aria-label="Permalink to &quot;优化提交信息效果的方法&quot;">​</a></h2><p>为了获得最佳的自动生成提交信息，可以考虑以下几点：</p><ol><li><strong>保持一致的提交风格</strong>：Cursor 会学习您现有的提交信息风格，因此保持一致会使生成的内容更符合您的偏好</li><li><strong>合理分组更改</strong>：将相关更改一起暂存，这样 AI 可以更好地理解整体目的</li><li><strong>检查并编辑</strong>：生成后，您可以根据需要编辑信息，以添加额外的上下文或细节</li><li><strong>定期使用</strong>：随着时间的推移，Cursor 会更好地了解您的项目和偏好</li></ol><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p>AI 提交信息功能在以下场景特别有用：</p><ol><li><strong>常规开发工作</strong>：快速为日常代码更改生成描述性提交</li><li><strong>团队协作</strong>：确保提交信息风格在团队成员之间保持一致</li><li><strong>大型提交</strong>：为包含多个更改的复杂提交生成全面的描述</li><li><strong>保持提交历史整洁</strong>：避免琐碎或不具描述性的提交信息</li></ol><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><p>目前，没有办法自定义或提供特定说明来指导提交信息的生成方式。Cursor 会自动适应您现有的提交信息风格。</p><p>对于特定的项目，如果您已经在使用例如 Conventional Commits 或其他提交格式约定，Cursor 将尝试识别和遵循这些模式。</p><hr><p>AI 提交信息功能是 Cursor 提供的一项便捷工具，可以帮助您保持清晰、有用的 Git 提交历史，同时减少在构思提交信息上花费的时间。通过智能分析您的代码更改和历史提交模式，它可以生成准确反映您工作的提交信息。</p><p>如有任何问题，请参考<a href="/ai/cursor/faq.html">常见问题解答</a>或访问<a href="https://forum.cursor.com" target="_blank" rel="noopener noreferrer">社区论坛</a>寻求帮助。</p>`,30)]))}const k=a(e,[["render",t]]);export{u as __pageData,k as default};
