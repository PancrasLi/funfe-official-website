import{_ as e,c as o,o as a,ag as i}from"./chunks/framework.CPp4lspA.js";const p=JSON.parse('{"title":"Cursor 代码库索引","description":"","frontmatter":{},"headers":[],"relativePath":"ai/cursor/codebase-indexing.md","filePath":"ai/cursor/codebase-indexing.md","lastUpdated":1741509101000}'),t={name:"ai/cursor/codebase-indexing.md"};function l(s,r,n,c,d,u){return a(),o("div",null,r[0]||(r[0]=[i('<h1 id="cursor-代码库索引" tabindex="-1">Cursor 代码库索引 <a class="header-anchor" href="#cursor-代码库索引" aria-label="Permalink to &quot;Cursor 代码库索引&quot;">​</a></h1><blockquote><p><strong>免责声明</strong>：本文档是 <a href="https://docs.cursor.com/context/codebase-indexing" target="_blank" rel="noopener noreferrer">Cursor 官方文档中的代码库索引页面</a>的<strong>第三方非官方中文翻译</strong>，仅供学习参考。内容可能不完全反映最新的官方信息，请以 <a href="https://docs.cursor.com" target="_blank" rel="noopener noreferrer">Cursor 官方文档</a> 为准。所有商标和版权归 Cursor/Anysphere 公司所有。</p></blockquote><blockquote><p>本文档介绍如何在 Cursor 中索引代码库，以获得更准确的 AI 辅助和搜索结果。</p></blockquote><hr><h2 id="索引您的代码库" tabindex="-1">索引您的代码库 <a class="header-anchor" href="#索引您的代码库" aria-label="Permalink to &quot;索引您的代码库&quot;">​</a></h2><p>为了获得更好、更准确的代码库回答，您可以索引您的代码库。在后台，Cursor 会为代码库中的每个文件计算嵌入向量，并使用这些嵌入向量来提高代码库回答的准确性。</p><p>Cursor 为每个用户维护单独的代码库索引。完成初始索引设置后，Cursor 会自动索引添加到工作区的任何新文件，以保持您的个人代码库上下文的最新状态。</p><p>您可以在 <code>Cursor 设置</code> &gt; <code>功能</code> &gt; <code>代码库索引</code> 下查看代码库索引的状态。</p><h2 id="高级设置" tabindex="-1">高级设置 <a class="header-anchor" href="#高级设置" aria-label="Permalink to &quot;高级设置&quot;">​</a></h2><p>默认情况下，Cursor 会索引代码库中的所有文件。</p><p>您还可以展开 <code>显示设置</code> 部分来访问更多高级选项。在这里，您可以决定是否要为新仓库启用自动索引，并配置 Cursor 在仓库索引过程中将忽略的文件。</p><p>Cursor 使用与 VS Code 相同的包来处理文件忽略，这意味着它会遵守所有 <code>.gitignore</code> 文件，包括子目录中的文件。您还可以创建一个 <code>.cursorignore</code> 文件用于用户特定的忽略模式，您可能希望将其添加到全局 <code>.gitignore</code> 中，以避免将其提交到存储库。</p><p>如果您的项目中有任何 AI 肯定不需要读取的大型内容文件，忽略这些文件可以提高回答的准确性。</p><h2 id="处理大型单一代码库" tabindex="-1">处理大型单一代码库 <a class="header-anchor" href="#处理大型单一代码库" aria-label="Permalink to &quot;处理大型单一代码库&quot;">​</a></h2><p>在处理包含数十万个文件的大型单一代码库时，务必要对索引内容进行战略规划。</p><ul><li>使用 <code>.cursorignore</code> 让每个开发者配置他们在单一代码库中工作的文件夹和路径</li><li>将 <code>.cursorignore</code> 添加到全局 <code>.gitignore</code> 中</li></ul><p>这允许每个开发者针对单一代码库内的特定工作区域优化索引。</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="我在哪里可以查看所有已索引的代码库" tabindex="-1">我在哪里可以查看所有已索引的代码库？ <a class="header-anchor" href="#我在哪里可以查看所有已索引的代码库" aria-label="Permalink to &quot;我在哪里可以查看所有已索引的代码库？&quot;">​</a></h3><p>目前，没有办法查看所有已索引的代码库列表。您需要通过在 Cursor 中打开项目并检查代码库索引设置来手动检查每个项目的索引状态。</p><h3 id="如何删除所有代码库" tabindex="-1">如何删除所有代码库？ <a class="header-anchor" href="#如何删除所有代码库" aria-label="Permalink to &quot;如何删除所有代码库？&quot;">​</a></h3><p>您可以从设置中删除 Cursor 账户以删除所有已索引的代码库，或者从每个项目的代码库索引设置中手动删除单个代码库。目前，没有办法在不删除账户的情况下一次性删除所有代码库。</p><h2 id="自定义索引策略" tabindex="-1">自定义索引策略 <a class="header-anchor" href="#自定义索引策略" aria-label="Permalink to &quot;自定义索引策略&quot;">​</a></h2><p>为了获得最佳结果，您可以自定义索引策略：</p><h3 id="_1-优先索引关键文件" tabindex="-1">1. 优先索引关键文件 <a class="header-anchor" href="#_1-优先索引关键文件" aria-label="Permalink to &quot;1. 优先索引关键文件&quot;">​</a></h3><p>对于大型项目，可以先关注最重要的部分：</p><ul><li>核心功能和实用程序</li><li>API 接口和类型定义</li><li>配置文件和项目结构</li></ul><h3 id="_2-使用-cursorignore-排除不必要文件" tabindex="-1">2. 使用 .cursorignore 排除不必要文件 <a class="header-anchor" href="#_2-使用-cursorignore-排除不必要文件" aria-label="Permalink to &quot;2. 使用 .cursorignore 排除不必要文件&quot;">​</a></h3><p>创建 <code>.cursorignore</code> 文件以排除：</p><ul><li>生成的代码、构建产物和依赖项</li><li>大型二进制文件和媒体资源</li><li>测试数据和日志文件</li></ul><h3 id="_3-定期更新索引" tabindex="-1">3. 定期更新索引 <a class="header-anchor" href="#_3-定期更新索引" aria-label="Permalink to &quot;3. 定期更新索引&quot;">​</a></h3><p>为确保索引保持最新状态：</p><ul><li>在进行重大项目修改后重新索引</li><li>当添加新模块或功能时检查索引状态</li><li>在从其他开发者拉取重大更新后更新索引</li></ul><h2 id="索引如何提升-ai-性能" tabindex="-1">索引如何提升 AI 性能 <a class="header-anchor" href="#索引如何提升-ai-性能" aria-label="Permalink to &quot;索引如何提升 AI 性能&quot;">​</a></h2><p>代码库索引通过多种方式增强 Cursor 的 AI 辅助功能：</p><ol><li><strong>更相关的答案</strong>：AI 可以找到与您的查询语义相关的代码，而不仅仅是关键字匹配</li><li><strong>更全面的理解</strong>：AI 能够理解您的整个代码库结构和关系</li><li><strong>更好的上下文感知</strong>：AI 可以引用相关文件中的信息来回答问题</li><li><strong>更精确的重构建议</strong>：在建议更改时，AI 可以考虑相关代码的影响</li></ol><hr><p>通过正确设置和维护代码库索引，您可以显著提高 Cursor 的 AI 辅助功能的质量和准确性。这种投资将使 AI 更好地理解您的代码库，从而提供更有价值的建议和解决方案。</p><p>如有任何问题，请参考<a href="/ai/cursor/faq.html">常见问题解答</a>或访问<a href="https://forum.cursor.com" target="_blank" rel="noopener noreferrer">社区论坛</a>寻求帮助。</p>',39)]))}const g=e(t,[["render",l]]);export{p as __pageData,g as default};
