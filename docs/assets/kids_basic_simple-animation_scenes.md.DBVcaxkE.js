import{_ as S,h as l,l as T,c as r,m as t,F as I,G as M,Q as E,t as p,e as j,n as N,a4 as F,o as k,q as V,s as w,a as G}from"./chunks/framework.B3gFn30p.js";const C=f=>(V("data-v-b874f603"),f=f(),w(),f),O=F('<h1 id="场景切换" tabindex="-1" data-v-b874f603>场景切换 <a class="header-anchor" href="#场景切换" aria-label="Permalink to &quot;场景切换&quot;" data-v-b874f603>​</a></h1><h2 id="神奇的场景变换-🎬" tabindex="-1" data-v-b874f603>神奇的场景变换 🎬 <a class="header-anchor" href="#神奇的场景变换-🎬" aria-label="Permalink to &quot;神奇的场景变换 🎬&quot;" data-v-b874f603>​</a></h2><p data-v-b874f603>你好，小朋友！今天我们要学习如何让场景变得生动有趣。 就像魔法一样，我们可以让白天变成黑夜，让晴天变成雨天！</p><h3 id="_1-变幻的天空-🌈" tabindex="-1" data-v-b874f603>1. 变幻的天空 🌈 <a class="header-anchor" href="#_1-变幻的天空-🌈" aria-label="Permalink to &quot;1. 变幻的天空 🌈&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>看，天空在不同时间会有不同的样子！</p>',5),z=["onClick"],R=C(()=>t("h3",{id:"_2-寻找游戏-🎯",tabindex:"-1"},[G("2. 寻找游戏 🎯 "),t("a",{class:"header-anchor",href:"#_2-寻找游戏-🎯","aria-label":'Permalink to "2. 寻找游戏 🎯"'},"​")],-1)),$=C(()=>t("p",null,"试试找出场景中的特定元素！",-1)),J={class:"game-box"},L={key:0,class:"target"},Q={class:"score"},U=F(`<h2 id="场景切换的秘密-🎨" tabindex="-1" data-v-b874f603>场景切换的秘密 🎨 <a class="header-anchor" href="#场景切换的秘密-🎨" aria-label="Permalink to &quot;场景切换的秘密 🎨&quot;" data-v-b874f603>​</a></h2><p data-v-b874f603>让场景变化的魔法：</p><ol data-v-b874f603><li data-v-b874f603><strong data-v-b874f603>渐变效果</strong>：场景之间平滑过渡</li><li data-v-b874f603><strong data-v-b874f603>元素动画</strong>：物体位置自然变化</li><li data-v-b874f603><strong data-v-b874f603>主题变换</strong>：颜色和氛围的转换</li><li data-v-b874f603><strong data-v-b874f603>互动响应</strong>：点击元素有反馈</li></ol><div class="tip custom-block" data-v-b874f603><p class="custom-block-title" data-v-b874f603>小提示</p><p data-v-b874f603>试试看：</p><ul data-v-b874f603><li data-v-b874f603>点击&quot;切换场景&quot;按钮，观察场景如何变化</li><li data-v-b874f603>玩&quot;寻找游戏&quot;，找出指定的元素</li><li data-v-b874f603>注意场景中的元素是如何移动的</li></ul></div><h2 id="动手练习时间-✨" tabindex="-1" data-v-b874f603>动手练习时间 ✨ <a class="header-anchor" href="#动手练习时间-✨" aria-label="Permalink to &quot;动手练习时间 ✨&quot;" data-v-b874f603>​</a></h2><ol data-v-b874f603><li data-v-b874f603><p data-v-b874f603>观察练习：</p><ul data-v-b874f603><li data-v-b874f603>场景是如何切换的？</li><li data-v-b874f603>元素是怎么移动的？</li><li data-v-b874f603>颜色是怎么变化的？</li></ul></li><li data-v-b874f603><p data-v-b874f603>创意想象：</p><ul data-v-b874f603><li data-v-b874f603>你想设计什么样的场景？</li><li data-v-b874f603>场景里可以放什么元素？</li><li data-v-b874f603>怎样让场景更有趣？</li></ul></li><li data-v-b874f603><p data-v-b874f603>游戏设计：</p><ul data-v-b874f603><li data-v-b874f603>想一想还可以设计什么游戏？</li><li data-v-b874f603>如何让游戏更有挑战性？</li><li data-v-b874f603>可以加入什么新规则？</li></ul></li></ol><div class="warning custom-block" data-v-b874f603><p class="custom-block-title" data-v-b874f603>注意事项</p><ul data-v-b874f603><li data-v-b874f603>场景切换要平滑，不要太突然</li><li data-v-b874f603>元素移动要自然，不要太快</li><li data-v-b874f603>游戏规则要简单，容易理解</li></ul></div><h2 id="进阶挑战-🚀" tabindex="-1" data-v-b874f603>进阶挑战 🚀 <a class="header-anchor" href="#进阶挑战-🚀" aria-label="Permalink to &quot;进阶挑战 🚀&quot;" data-v-b874f603>​</a></h2><ol data-v-b874f603><li data-v-b874f603><p data-v-b874f603>场景创意：</p><ul data-v-b874f603><li data-v-b874f603>设计四季变换的场景</li><li data-v-b874f603>创作天气变化的效果</li><li data-v-b874f603>制作昼夜交替的动画</li></ul></li><li data-v-b874f603><p data-v-b874f603>游戏玩法：</p><ul data-v-b874f603><li data-v-b874f603>增加计时挑战</li><li data-v-b874f603>添加连击奖励</li><li data-v-b874f603>设计关卡进阶</li></ul></li><li data-v-b874f603><p data-v-b874f603>互动方式：</p><ul data-v-b874f603><li data-v-b874f603>加入音效反馈</li><li data-v-b874f603>设计特殊效果</li><li data-v-b874f603>创造新的玩法</li></ul></li></ol><p data-v-b874f603>准备好了吗？让我们一起创造更多神奇的场景吧！ 🌟</p><h2 id="场景动画详解-📚" tabindex="-1" data-v-b874f603>场景动画详解 📚 <a class="header-anchor" href="#场景动画详解-📚" aria-label="Permalink to &quot;场景动画详解 📚&quot;" data-v-b874f603>​</a></h2><h3 id="_1-场景切换是如何实现的-🎨" tabindex="-1" data-v-b874f603>1. 场景切换是如何实现的？ 🎨 <a class="header-anchor" href="#_1-场景切换是如何实现的-🎨" aria-label="Permalink to &quot;1. 场景切换是如何实现的？ 🎨&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>想象一下，我们在翻一本魔法书：</p><ol data-v-b874f603><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>渐变过渡</strong></p><ul data-v-b874f603><li data-v-b874f603>当前页面慢慢变淡（opacity从1变到0.5）</li><li data-v-b874f603>新页面慢慢显现（opacity从0.5变到1）</li><li data-v-b874f603>这就像魔法书页在慢慢翻动一样</li></ul></li><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>背景变化</strong></p><ul data-v-b874f603><li data-v-b874f603>白天是天蓝色（<code data-v-b874f603>#87CEEB</code>）</li><li data-v-b874f603>黄昏是橙红色（<code data-v-b874f603>#FFA07A</code>）</li><li data-v-b874f603>夜晚是深蓝色（<code data-v-b874f603>#191970</code>）</li><li data-v-b874f603>颜色的变化就像天空在慢慢改变颜色</li></ul></li></ol><h3 id="_2-元素是怎么移动的-🎯" tabindex="-1" data-v-b874f603>2. 元素是怎么移动的？ 🎯 <a class="header-anchor" href="#_2-元素是怎么移动的-🎯" aria-label="Permalink to &quot;2. 元素是怎么移动的？ 🎯&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>每个场景中的元素（太阳、月亮、星星等）都有自己的运动规则：</p><ol data-v-b874f603><li data-v-b874f603><strong data-v-b874f603>位置计算</strong></li></ol><div class="language-js vp-adaptive-theme" data-v-b874f603><button title="Copy Code" class="copy" data-v-b874f603></button><span class="lang" data-v-b874f603>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-b874f603><code data-v-b874f603><span class="line" data-v-b874f603><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>: Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>  // 在宽度10%-90%的范围内随机</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>: Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 20</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>  // 在高度20%-80%的范围内随机</span></span></code></pre></div><ol start="2" data-v-b874f603><li data-v-b874f603><strong data-v-b874f603>移动方式</strong><ul data-v-b874f603><li data-v-b874f603>每2秒钟，元素会找到一个新的位置</li><li data-v-b874f603>使用CSS过渡效果让移动变得平滑</li><li data-v-b874f603>就像小鸟在天空中飞来飞去</li></ul></li></ol><h3 id="_3-游戏机制详解-🎮" tabindex="-1" data-v-b874f603>3. 游戏机制详解 🎮 <a class="header-anchor" href="#_3-游戏机制详解-🎮" aria-label="Permalink to &quot;3. 游戏机制详解 🎮&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>寻找游戏是怎么工作的：</p><ol data-v-b874f603><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>开始游戏时</strong></p><ul data-v-b874f603><li data-v-b874f603>初始化分数为0</li><li data-v-b874f603>从当前场景中选择一个目标元素</li><li data-v-b874f603>开始元素的自动移动</li></ul></li><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>计分规则</strong></p><ul data-v-b874f603><li data-v-b874f603>找到正确元素：+10分</li><li data-v-b874f603>点错元素：-5分（但不会低于0分）</li><li data-v-b874f603>这样可以训练观察力和反应速度</li></ul></li><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>游戏难度</strong></p><ul data-v-b874f603><li data-v-b874f603>元素会不断移动位置</li><li data-v-b874f603>需要在移动的元素中找到目标</li><li data-v-b874f603>越快找到，得分越多</li></ul></li></ol><h2 id="编程知识小贴士-💡" tabindex="-1" data-v-b874f603>编程知识小贴士 💡 <a class="header-anchor" href="#编程知识小贴士-💡" aria-label="Permalink to &quot;编程知识小贴士 💡&quot;" data-v-b874f603>​</a></h2><h3 id="_1-动画原理" tabindex="-1" data-v-b874f603>1. 动画原理 <a class="header-anchor" href="#_1-动画原理" aria-label="Permalink to &quot;1. 动画原理&quot;" data-v-b874f603>​</a></h3><div class="language-js vp-adaptive-theme" data-v-b874f603><button title="Copy Code" class="copy" data-v-b874f603></button><span class="lang" data-v-b874f603>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-b874f603><code data-v-b874f603><span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 过渡动画</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>: all 1s ease;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 所有属性在1秒内平滑变化</span></span>
<span class="line" data-v-b874f603></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 定时器动画</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603> {</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>  // 每隔一段时间执行的动作</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603>2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 2000毫秒 = 2秒</span></span></code></pre></div><h3 id="_2-随机位置生成" tabindex="-1" data-v-b874f603>2. 随机位置生成 <a class="header-anchor" href="#_2-随机位置生成" aria-label="Permalink to &quot;2. 随机位置生成&quot;" data-v-b874f603>​</a></h3><div class="language-js vp-adaptive-theme" data-v-b874f603><button title="Copy Code" class="copy" data-v-b874f603></button><span class="lang" data-v-b874f603>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-b874f603><code data-v-b874f603><span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 生成10到90之间的随机数</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603>random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> 10</span></span>
<span class="line" data-v-b874f603></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 这样可以保证元素不会太靠近边缘</span></span></code></pre></div><h3 id="_3-状态管理" tabindex="-1" data-v-b874f603>3. 状态管理 <a class="header-anchor" href="#_3-状态管理" aria-label="Permalink to &quot;3. 状态管理&quot;" data-v-b874f603>​</a></h3><div class="language-js vp-adaptive-theme" data-v-b874f603><button title="Copy Code" class="copy" data-v-b874f603></button><span class="lang" data-v-b874f603>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-b874f603><code data-v-b874f603><span class="line" data-v-b874f603><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 使用ref来跟踪状态变化</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 跟踪分数</span></span>
<span class="line" data-v-b874f603><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603> isActive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-b874f603> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b874f603> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b874f603>false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-b874f603>)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-b874f603>// 跟踪游戏状态</span></span></code></pre></div><h2 id="趣味知识拓展-🌟" tabindex="-1" data-v-b874f603>趣味知识拓展 🌟 <a class="header-anchor" href="#趣味知识拓展-🌟" aria-label="Permalink to &quot;趣味知识拓展 🌟&quot;" data-v-b874f603>​</a></h2><h3 id="_1-为什么天空会变色" tabindex="-1" data-v-b874f603>1. 为什么天空会变色？ <a class="header-anchor" href="#_1-为什么天空会变色" aria-label="Permalink to &quot;1. 为什么天空会变色？&quot;" data-v-b874f603>​</a></h3><ul data-v-b874f603><li data-v-b874f603>白天：阳光直射，天空呈现蓝色</li><li data-v-b874f603>黄昏：阳光斜射，散射出橙红色</li><li data-v-b874f603>夜晚：没有阳光，呈现深蓝色</li><li data-v-b874f603>我们的场景正是模仿这个自然现象！</li></ul><h3 id="_2-动画在生活中的应用" tabindex="-1" data-v-b874f603>2. 动画在生活中的应用 <a class="header-anchor" href="#_2-动画在生活中的应用" aria-label="Permalink to &quot;2. 动画在生活中的应用&quot;" data-v-b874f603>​</a></h3><ul data-v-b874f603><li data-v-b874f603>电影和动画片</li><li data-v-b874f603>游戏画面</li><li data-v-b874f603>手机应用界面</li><li data-v-b874f603>网页特效</li></ul><h3 id="_3-编程中的数学应用" tabindex="-1" data-v-b874f603>3. 编程中的数学应用 <a class="header-anchor" href="#_3-编程中的数学应用" aria-label="Permalink to &quot;3. 编程中的数学应用&quot;" data-v-b874f603>​</a></h3><ul data-v-b874f603><li data-v-b874f603>随机数生成</li><li data-v-b874f603>位置计算</li><li data-v-b874f603>时间控制</li><li data-v-b874f603>分数统计</li></ul><h2 id="动手实验-🔬" tabindex="-1" data-v-b874f603>动手实验 🔬 <a class="header-anchor" href="#动手实验-🔬" aria-label="Permalink to &quot;动手实验 🔬&quot;" data-v-b874f603>​</a></h2><h3 id="_1-创建新场景" tabindex="-1" data-v-b874f603>1. 创建新场景 <a class="header-anchor" href="#_1-创建新场景" aria-label="Permalink to &quot;1. 创建新场景&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>试试设计这些场景：</p><ul data-v-b874f603><li data-v-b874f603>下雨天：🌧️ + ⚡ + ☔</li><li data-v-b874f603>春天：🌸 + 🦋 + 🌺</li><li data-v-b874f603>冬天：❄️ + ⛄ + 🧊</li></ul><h3 id="_2-自制动画" tabindex="-1" data-v-b874f603>2. 自制动画 <a class="header-anchor" href="#_2-自制动画" aria-label="Permalink to &quot;2. 自制动画&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>可以尝试：</p><ol data-v-b874f603><li data-v-b874f603>画一个简单的翻书动画</li><li data-v-b874f603>用积木搭建场景变换</li><li data-v-b874f603>制作一个简单的天气变化表</li></ol><h3 id="_3-编程练习" tabindex="-1" data-v-b874f603>3. 编程练习 <a class="header-anchor" href="#_3-编程练习" aria-label="Permalink to &quot;3. 编程练习&quot;" data-v-b874f603>​</a></h3><p data-v-b874f603>思考这些问题：</p><ul data-v-b874f603><li data-v-b874f603>如何让元素移动得更自然？</li><li data-v-b874f603>能不能添加更多互动效果？</li><li data-v-b874f603>怎样设计更有趣的游戏规则？</li></ul><div class="tip custom-block" data-v-b874f603><p class="custom-block-title" data-v-b874f603>学习建议</p><ol data-v-b874f603><li data-v-b874f603>先观察，再动手</li><li data-v-b874f603>从简单开始，慢慢增加难度</li><li data-v-b874f603>多尝试，不怕犯错</li><li data-v-b874f603>记录自己的创意想法</li></ol></div><h2 id="课后小任务-📝" tabindex="-1" data-v-b874f603>课后小任务 📝 <a class="header-anchor" href="#课后小任务-📝" aria-label="Permalink to &quot;课后小任务 📝&quot;" data-v-b874f603>​</a></h2><ol data-v-b874f603><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>观察记录</strong></p><ul data-v-b874f603><li data-v-b874f603>记录一天中天空的变化</li><li data-v-b874f603>画下不同时间的天空颜色</li><li data-v-b874f603>观察云朵的移动</li></ul></li><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>创意设计</strong></p><ul data-v-b874f603><li data-v-b874f603>设计一个新的场景主题</li><li data-v-b874f603>画出场景中的元素</li><li data-v-b874f603>想象元素如何移动</li></ul></li><li data-v-b874f603><p data-v-b874f603><strong data-v-b874f603>编程思考</strong></p><ul data-v-b874f603><li data-v-b874f603>写下游戏规则构想</li><li data-v-b874f603>设计新的计分方式</li><li data-v-b874f603>想象新的互动方式</li></ul></li></ol><p data-v-b874f603>准备好了吗？让我们一起进入神奇的编程世界！ 🚀</p>`,50),Y=JSON.parse('{"title":"场景切换","description":"","frontmatter":{},"headers":[],"relativePath":"kids/basic/simple-animation/scenes.md","filePath":"kids/basic/simple-animation/scenes.md","lastUpdated":1737094921000}'),H={name:"kids/basic/simple-animation/scenes.md"},K=Object.assign(H,{setup(f){const s=l("day"),h=l(!1),e={day:{background:"#87CEEB",elements:["☀️","🌤️","🦅"],nextScene:"sunset"},sunset:{background:"#FFA07A",elements:["🌅","🦢","🎈"],nextScene:"night"},night:{background:"#191970",elements:["🌙","⭐","🦉"],nextScene:"day"}},n=l(0),i=l(!1),o=l(""),g=l([]);let c;const d=l({});function q(){if(h.value)return;h.value=!0;const a=e[s.value].nextScene;setTimeout(()=>{s.value=a,u(),h.value=!1},1e3)}function u(){d.value={},e[s.value].elements.forEach((a,b)=>{d.value[a]={x:Math.random()*80+10,y:Math.random()*60+20}})}function A(){i.value||(i.value=!0,n.value=0,g.value=[...e[s.value].elements],m(),c=setInterval(()=>{D()},2e3))}function x(){i.value=!1,clearInterval(c),u()}function m(){const a=g.value.filter(b=>b!==o.value);o.value=a[Math.floor(Math.random()*a.length)]}function D(){Object.keys(d.value).forEach(a=>{d.value[a]={x:Math.random()*80+10,y:Math.random()*60+20}})}function P(a){i.value&&(a===o.value?(n.value+=10,m()):n.value=Math.max(0,n.value-5))}return T(()=>(u(),()=>clearInterval(c))),(a,b)=>(k(),r("div",null,[O,t("div",{class:"scene-box",style:E({backgroundColor:e[s.value].background,opacity:h.value?.5:1})},[(k(!0),r(I,null,M(e[s.value].elements,(v,B)=>{var _,y;return k(),r("div",{key:B,class:"scene-element",style:E({left:((_=d.value[v])==null?void 0:_.x)+"%",top:((y=d.value[v])==null?void 0:y.y)+"%"}),onClick:W=>P(v)},p(v),13,z)}),128)),t("div",{class:"controls"},[t("button",{onClick:q}," 切换场景 ")])],4),R,$,t("div",J,[i.value?(k(),r("div",L," 寻找: "+p(o.value),1)):j("",!0),t("div",Q," 得分: "+p(n.value),1),t("button",{onClick:b[0]||(b[0]=v=>i.value?x():A()),class:N({active:i.value})},p(i.value?"停止游戏":"开始游戏"),3)]),U]))}}),Z=S(K,[["__scopeId","data-v-b874f603"]]);export{Y as __pageData,Z as default};
